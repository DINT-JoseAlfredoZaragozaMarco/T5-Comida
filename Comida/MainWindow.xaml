<Window x:Class="Comida.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Comida"
        mc:Ignorable="d"
        Icon="./assets/fruit_food_apple.ico"
        Title="Comida" Height="450" Width="800">

    <Window.Resources>
        <Style TargetType="{x:Type TextBox}">
            <Setter Property="Template" Value="{DynamicResource TextBoxDatos}"/>
            <Setter Property="FontSize" Value="15"/>
            <Setter Property="Margin" Value="5"/>
        </Style>
        <Style TargetType="{x:Type TextBlock}" x:Key="Fuente">
            <Setter Property="FontSize" Value="30"/>
            <Setter Property="TextAlignment" Value="Center"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding Path=Nacionalidad}" Value="USA">
                    <Setter Property="FontFamily" Value="Slim Summer"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding Path=Nacionalidad}" Value="China">
                    <Setter Property="FontFamily" Value="Chinese Wok Food St"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding Path=Nacionalidad}" Value="Mexico">
                    <Setter Property="FontFamily" Value="Taco Salad"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style TargetType="{x:Type Image}" x:Key="GlutenVisible">
            <Style.Triggers>
                <DataTrigger Binding="{Binding Path=Gluten}" Value="True">
                    <Setter Property="Visibility"  Value="Visible"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding Path=Gluten}" Value="False">
                    <Setter Property="Visibility"  Value="Collapsed"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style TargetType="{x:Type Image}" x:Key="SojaVisible">
            <Style.Triggers>
                <DataTrigger Binding="{Binding Path=Soja}" Value="True">
                    <Setter Property="Visibility"  Value="Visible"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding Path=Soja}" Value="False">
                    <Setter Property="Visibility"  Value="Collapsed"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style TargetType="{x:Type Image}" x:Key="LecheVisible">
            <Style.Triggers>
                <DataTrigger Binding="{Binding Path=Leche}" Value="True">
                    <Setter Property="Visibility"  Value="Visible"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding Path=Leche}" Value="False">
                    <Setter Property="Visibility"  Value="Collapsed"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style TargetType="{x:Type Image}" x:Key="SulfitosVisible">
            <Style.Triggers>
                <DataTrigger Binding="{Binding Path=Sulfitos}" Value="True">
                    <Setter Property="Visibility"  Value="Visible"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding Path=Sulfitos}" Value="False">
                    <Setter Property="Visibility"  Value="Collapsed"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style TargetType="{x:Type Image}" x:Key="ComidaPais">
            <Setter Property="Width" Value="50"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding Path=Nacionalidad}" Value="USA">
                    <Setter Property="Source" Value="./assets/united_states.png"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding Path=Nacionalidad}" Value="China">
                    <Setter Property="Source" Value="./assets/china.png"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding Path=Nacionalidad}" Value="Mexico">
                    <Setter Property="Source" Value="./assets/mexico.png"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <DataTemplate x:Key="ListaComida">
            <Border BorderThickness="1"  BorderBrush="Black" Margin="10" Width="250" Background="AliceBlue">
                <Border.Effect>
                    <DropShadowEffect></DropShadowEffect>
                </Border.Effect>
                <StackPanel Margin="10">
                    <Viewbox Height="50">
                        <TextBlock Text="{Binding Path=Comida}" Style="{StaticResource Fuente}"></TextBlock>
                    </Viewbox>
                    <Image Source="{Binding Path=Imagen}" Width="200" Height="200" Stretch="UniformToFill"></Image>
                    <DockPanel LastChildFill="False">
                        <Image DockPanel.Dock="Left" Style="{StaticResource ComidaPais}"></Image>
                        <StackPanel Orientation="Horizontal" DockPanel.Dock="Right">
                            <Image x:Name="glutenImage" Source="assets/gluten.png" Width="25" Height="50" Style="{StaticResource GlutenVisible}"></Image>
                            <Image x:Name="sojaImage" Source="assets/soybean.png" Width="25" Height="50" Style="{StaticResource SojaVisible}"></Image>
                            <Image x:Name="lecheImage" Source="assets/milk.png" Width="25" Height="50" Style="{StaticResource LecheVisible}"></Image>
                            <Image x:Name="sulfitosImage" Source="assets/sulfide.png" Width="25" Height="50" Style="{StaticResource SulfitosVisible}"></Image>
                        </StackPanel>
                    </DockPanel>
                </StackPanel>
            </Border>
        </DataTemplate>
        <ControlTemplate x:Key="LimpiaBoton" TargetType="{x:Type Button}">
            <Border x:Name="border" CornerRadius="5" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="IsDefaulted" Value="True">
                    <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                </Trigger>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" TargetName="border" Value="#00FF00"/>
                    <Setter Property="BorderBrush" TargetName="border" Value="#000000"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" TargetName="border" Value="#FF0055"/>
                    <Setter Property="BorderBrush" TargetName="border" Value="#000000"/>
                </Trigger>
                <Trigger Property="ToggleButton.IsChecked" Value="True">
                    <Setter Property="Background" TargetName="border" Value="#FFBCDDEE"/>
                    <Setter Property="BorderBrush" TargetName="border" Value="#FF245A83"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Background" TargetName="border" Value="#FFF4F4F4"/>
                    <Setter Property="BorderBrush" TargetName="border" Value="#FFADB2B5"/>
                    <Setter Property="Foreground" Value="#FF838383"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <ControlTemplate x:Key="CheckBoxAlergenos" TargetType="{x:Type CheckBox}">
            <Grid x:Name="templateRoot" Background="Transparent" SnapsToDevicePixels="True">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Border x:Name="checkBoxBorder" CornerRadius="3" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="1" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                    <Grid x:Name="markGrid" Margin="5">
                        <Path x:Name="optionMark" Data="F1M9.97498,1.22334L4.6983,9.09834 4.52164,9.09834 0,5.19331 1.27664,3.52165 4.255,6.08833 8.33331,1.52588E-05 9.97498,1.22334z" Fill="#998000ff" Margin="1" Opacity="0" Stretch="None"/>
                        <Rectangle x:Name="indeterminateMark" Fill="#FF212121" Margin="2" Opacity="0"/>
                    </Grid>
                </Border>
                <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Grid.Column="1" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="HasContent" Value="True">
                    <Setter Property="FocusVisualStyle">
                        <Setter.Value>
                            <Style>
                                <Setter Property="Control.Template">
                                    <Setter.Value>
                                        <ControlTemplate>
                                            <Rectangle Margin="14,0,0,0" SnapsToDevicePixels="True" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="Padding" Value="4,-1,0,0"/>
                </Trigger>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" TargetName="checkBoxBorder" Value="#FFF3F9FF"/>
                    <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="#998000ff"/>
                    <Setter Property="Fill" TargetName="optionMark" Value="#998000ff"/>
                    <Setter Property="Fill" TargetName="indeterminateMark" Value="#FF212121"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Background" TargetName="checkBoxBorder" Value="#FFE6E6E6"/>
                    <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="#FFBCBCBC"/>
                    <Setter Property="Fill" TargetName="optionMark" Value="#FF707070"/>
                    <Setter Property="Fill" TargetName="indeterminateMark" Value="#FF707070"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" TargetName="checkBoxBorder" Value="#FFD9ECFF"/>
                    <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="#FF3C77DD"/>
                    <Setter Property="Fill" TargetName="optionMark" Value="#FF212121"/>
                    <Setter Property="Fill" TargetName="indeterminateMark" Value="#FF212121"/>
                </Trigger>
                <Trigger Property="IsChecked" Value="True">
                    <Setter Property="Opacity" TargetName="optionMark" Value="1"/>
                    <Setter Property="Opacity" TargetName="indeterminateMark" Value="0"/>
                </Trigger>
                <Trigger Property="IsChecked" Value="{x:Null}">
                    <Setter Property="Opacity" TargetName="optionMark" Value="0"/>
                    <Setter Property="Opacity" TargetName="indeterminateMark" Value="1"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <Style TargetType="{x:Type CheckBox}">
            <Setter Property="Template" Value="{DynamicResource CheckBoxAlergenos}"/>
            <Setter Property="Margin" Value="5"/>
        </Style>
        <ControlTemplate x:Key="GroupBoxAlergenos" TargetType="{x:Type GroupBox}">
            <Grid SnapsToDevicePixels="True">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="6"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="6"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="6"/>
                </Grid.RowDefinitions>
                <Border BorderBrush="Black" BorderThickness="{TemplateBinding BorderThickness}" Grid.ColumnSpan="4" Grid.Row="1" Grid.RowSpan="3">
                    <Border.OpacityMask>
                        <MultiBinding ConverterParameter="7" UpdateSourceTrigger="Default">
                            <MultiBinding.Converter>
                                <BorderGapMaskConverter/>
                            </MultiBinding.Converter>
                            <Binding ElementName="Header" Path="ActualWidth"/>
                            <Binding Path="ActualWidth" RelativeSource="{RelativeSource Self}"/>
                            <Binding Path="ActualHeight" RelativeSource="{RelativeSource Self}"/>
                        </MultiBinding>
                    </Border.OpacityMask>
                </Border>
                <Border x:Name="Header" Grid.Column="1" Padding="3,1,3,0" Grid.Row="0" Grid.RowSpan="2">
                    <ContentPresenter ContentTemplate="{TemplateBinding HeaderTemplate}" Content="{TemplateBinding Header}" ContentStringFormat="{TemplateBinding HeaderStringFormat}" ContentSource="Header" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                </Border>
                <ContentPresenter Grid.ColumnSpan="2" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Grid.Column="1" ContentStringFormat="{TemplateBinding ContentStringFormat}" Margin="{TemplateBinding Padding}" Grid.Row="2" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
            </Grid>
        </ControlTemplate>
        <ControlTemplate x:Key="TextBoxDatos" TargetType="{x:Type TextBox}">
            <Border x:Name="border" CornerRadius="8" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                <ScrollViewer x:Name="PART_ContentHost" Margin="3" Focusable="False" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
            </Border>
            
            <ControlTemplate.Triggers>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Opacity" TargetName="border" Value="0.56"/>
                </Trigger>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="BorderBrush" TargetName="border" Value="#FF7EB4EA"/>
                </Trigger>
                <Trigger Property="IsKeyboardFocused" Value="True">
                    <Setter Property="BorderBrush" TargetName="border" Value="#FF569DE5"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
    </Window.Resources>

    <DockPanel>
        <StackPanel Orientation="Vertical" DockPanel.Dock="Right" Background="#DDDDDD">
            <TextBlock FontSize="15" Margin="10">Nombre del plato</TextBlock>
            <TextBox Text="{Binding Path=ComidaSeleccionada.Comida, UpdateSourceTrigger=PropertyChanged}"></TextBox>
            <TextBlock FontSize="15" Margin="5">Foto del plato</TextBlock>
            <TextBox Text="{Binding Path=ComidaSeleccionada.Imagen}" ></TextBox>
            <TextBlock FontSize="15" Margin="5">Tipo de comida</TextBlock>
            <ComboBox FontSize="15" Margin="5" ItemsSource="{Binding Path=Tipos}" SelectedValue="{Binding Path=ComidaSeleccionada.Nacionalidad}"></ComboBox>
            <GroupBox Header="Alérgenos" Margin="5" BorderBrush="Black" Template="{DynamicResource GroupBoxAlergenos}">
                <UniformGrid Margin="10">
                    <CheckBox IsChecked="{Binding Path=ComidaSeleccionada.Leche}">Leche</CheckBox>
                    <CheckBox IsChecked="{Binding Path=ComidaSeleccionada.Soja}">Soja</CheckBox>
                    <CheckBox IsChecked="{Binding Path=ComidaSeleccionada.Gluten}">Glutén</CheckBox>
                    <CheckBox IsChecked="{Binding Path=ComidaSeleccionada.Sulfitos}">Sulfitos</CheckBox>
                </UniformGrid>
            </GroupBox>
            <Button Width="150" Height="50" FontSize="16" Margin="10" Background="AliceBlue" Click="Button_Click" Template="{DynamicResource LimpiaBoton}">Limpiar selección</Button>
        </StackPanel>
        <Border Margin="10" BorderBrush="Black" BorderThickness="1">
            <ListBox ItemTemplate="{StaticResource ListaComida}" ItemsSource="{Binding Path=Platos}" ScrollViewer.HorizontalScrollBarVisibility="Disabled" SelectedItem="{Binding Path=ComidaSeleccionada}">
                <ListBox.ItemsPanel>
                    <ItemsPanelTemplate>
                        <WrapPanel></WrapPanel>
                    </ItemsPanelTemplate>
                </ListBox.ItemsPanel>
            </ListBox>
        </Border>
    </DockPanel>
</Window>
